name: workflow-cicd

on:
  push:
    branches:
      - main
      - beta
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  pr:
    name: Nx Cloud - PR Job
    if: ${{ (github.event_name == 'pull_request') }}
    uses: ./.github/workflows/nx-cloud-main.yml
    with:
      main-branch-name: ${{ github.event.pull_request.base.ref || github.ref_name }}
      number-of-agents: 3
      parallel-commands: |
        pnpm exec nx-cloud record -- pnpm exec nx format:check
      parallel-commands-on-agents: |
        pnpm exec nx affected --target=lint --parallel=3
        pnpm exec nx-cloud record -- pnpm exec nx affected --target=test --parallel=3 --configuration=ci
        pnpm exec nx affected --target=build --parallel=3
      final-commands: |
        pnpm exec nx affected --target=test --parallel=3 --configuration=ci
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Nx Cloud - Release Job
    if: ${{ (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
    uses: ./.github/workflows/nx-cloud-main.yml
    with:
      main-branch-name: ${{ github.ref_name }}
      number-of-agents: 3
      parallel-commands: |
        pnpm exec nx-cloud record -- pnpm exec nx format:check
      parallel-commands-on-agents: |
        pnpm exec nx affected --target=lint --parallel=3
        pnpm exec nx-cloud record -- pnpm exec nx affected --target=test --parallel=3 --configuration=ci
        pnpm exec nx affected --target=build --parallel=3
      final-commands: |
        pnpm exec nx affected --target=test --parallel=3 --configuration=ci
        env
        pnpm exec nx affected --target=semantic-release
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  agents:
    name: Nx Cloud - Agents
    uses: ./.github/workflows/nx-cloud-agents.yml
    with:
      number-of-agents: 3
    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
